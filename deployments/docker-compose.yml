name: woben

services:
  database:
    container_name: woben-db
    image: postgres:16-alpine
    restart: always
    networks:
      - woben_network
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - pg_data:/var/lib/postgresql/data

  electric:
    container_name: woben-electric
    image: electricsql/electric
    restart: always
    networks:
      - woben_network
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:5432/${DB_NAME}?sslmode=disable
      - ELECTRIC_PORT=4000
    depends_on:
      - database
    volumes:
      - electric_data:/app/persistent

  server:
    container_name: woben-server
    build:
      context: ../
      dockerfile: ./deployments/server.Dockerfile
    env_file:
      - .env
    restart: always
    networks:
      - woben_network
      - traefik_network
    depends_on:
      - database
    labels:
      - traefik.enable=true
      - traefik.http.routers.woben-server.entrypoints=websecure
      - traefik.http.routers.woben-server.rule=Host(`woben.local.${DOMAIN}`) && PathPrefix(`/api`)
      - traefik.http.middlewares.strip-api-prefix.stripprefix.prefixes=/api
      - traefik.http.routers.woben-server.tls=true
      - traefik.http.routers.woben-server.tls.certresolver=cloudflare
      - traefik.http.routers.woben-server.tls.domains[0].main=local.${DOMAIN}
      - traefik.http.routers.woben-server.tls.domains[0].sans=*.local.${DOMAIN}
      - traefik.http.routers.woben-server.middlewares=internal-gateway@file
      - traefik.http.routers.woben-server.middlewares=strip-api-prefix
      - traefik.http.routers.woben-server.service=woben-server
      - traefik.http.services.woben-server.loadbalancer.server.port=3000

  app:
    container_name: woben-app
    build:
      context: ../
      dockerfile: ./deployments/app.Dockerfile
      args:
        - PUBLIC_API_URL=${PUBLIC_API_URL}
        - PUBLIC_APP_BASE_URL=${PUBLIC_APP_BASE_URL}
    restart: always
    networks:
      - woben_network
      - traefik_network
    depends_on:
      - database
      - electric
      - server
    labels:
      - traefik.enable=true
      - traefik.http.routers.woben-app.entrypoints=websecure
      - traefik.http.routers.woben-app.rule=Host(`woben.local.${DOMAIN}`)
      - traefik.http.routers.woben-app.tls=true
      - traefik.http.routers.woben-app.tls.certresolver=cloudflare
      - traefik.http.routers.woben-app.tls.domains[0].main=local.${DOMAIN}
      - traefik.http.routers.woben-app.tls.domains[0].sans=*.local.${DOMAIN}
      - traefik.http.routers.woben-app.middlewares=internal-gateway@file
      - traefik.http.routers.woben-app.service=woben-app
      - traefik.http.services.woben-app.loadbalancer.server.port=8080

  migration:
    container_name: woben-migration
    build:
      context: ../
      dockerfile: ./deployments/migration.Dockerfile
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
    restart: on-failure
    networks:
      - woben_network
    depends_on:
      - database

volumes:
  pg_data:
    driver: local
  electric_data:
    driver: local

networks:
  woben_network:
    name: woben_network
    driver: bridge
  traefik_network:
    external: true
